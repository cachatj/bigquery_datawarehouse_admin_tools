CREATE PROCEDURE `PROJECT_ID`.D1_PHM_CONFDIM_MATERIAL.SP_MATERIAL_DELTA_LOAD_TEST()
BEGIN

/***********************************************************************************************************************
Author: Gopalakrishnan Thangavel
Creation Date: 05/15/2023
Data Sources:

*************************************************************************
Change History		[DATE]			[CHANGED BY]	[JIRA#]		[CODE REVIEW BY]		[DESCRIPTION]
	<#>					<MM/DD/YYYY>	<Name>			<ID>

************************************************************************************************************************/

DECLARE v_start_time datetime;
DECLARE v_start_stp timestamp;
DECLARE v_end_stp timestamp;
DECLARE v_stored_proc_name string;
DECLARE v_last_timestamp TIMESTAMP;
DECLARE v_proc_timestamp TIMESTAMP;

SET v_start_time = current_datetime();
SET v_start_stp = CURRENT_TIMESTAMP;
SET v_end_stp = (SELECT CAST('9999-12-31 23:59:59' AS TIMESTAMP));
SET v_stored_proc_name = 'D1_PHM_CONFDIM_MATERIAL.SP_MATERIAL_DELTA_LOAD_TEST';

--STEP 1: Get the previous run timestamp from the event table.
SET v_proc_timestamp = (SELECT IFNULL(SP_MATERIAL_DELTA_LOAD_STP, TIMESTAMP '1900-01-01 00:00:00') FROM `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.LAST_TIMESTAMP_MATERIAL_EV`);

--STEP 2: Get the current run timestamp.
SET v_last_timestamp = (SELECT MAX(D0_START_STP) FROM `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_CUSTOM__MATERIAL_SCD_CV` );

--Create a temporary table to get all records from MARA which is missing in source
CREATE OR REPLACE TEMPORARY TABLE MATERIAL_MARA_TEMP
AS
(
SELECT
	MATNR,
	YYMLTSRCF,
	YYAWPM,
	YYUOMM,
	YYPRIU,
	YYEDESC,
	YYOBRATC,
	YYREQG,
	YYOPIOID,
	YYDEANAME,
	YYNIOSH,
	YYBUNIT,
	YYMANOVR,
	YYOVRREA
FROM
`PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MARA_CV`
WHERE D0_CURR_VRSN_FLG = 'Y'
);

--Get the Distinct Supplier Name  from Supplier table
CREATE OR REPLACE TEMPORARY TABLE SUPPLIER_TEMP
AS
SELECT
DISTINCT
SUPPLIER_NUM,
SUPPLIER_NAM
FROM `PROJECT_ID.VW_PHM_CONFDIM_SUPPLIER.SUPPLIER_CV` SUPP
;

--Get the record from AUSP,INOB table
CREATE OR REPLACE TEMPORARY TABLE AUSP_INOB_TEMP
AS
SELECT
ATINN,
ATWRT,
AUSP.OBJEK,
AUSP.KLART
FROM `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__AUSP_CV` AUSP
INNER JOIN `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__INOB_CV` INOB
ON AUSP.OBJEK = INOB.CUOBJ AND AUSP.KLART = INOB.KLART
WHERE AUSP.ATINN IN (
  '0000000037','0000000038','0000000039','0000000040','0000000041','0000000042','0000000043','0000000044','0000000045','0000000046',
	'0000000047','0000000048','0000000049','0000000055','0000000056','0000000059','0000000064','0000000065','0000000066','0000000067',
	'0000000068','0000000069','0000000070','0000000071','0000000072','0000000073','0000000074','0000000076','0000000079','0000000080',
	'0000000082','0000000085','0000000088','0000000091'
)
AND
AUSP.KLART = '001' AND INOB.OBTAB = 'MARA'
;

--Get the single record FROM MEAN_CV based on condition
CREATE OR REPLACE TEMPORARY TABLE EANTP_UC_UX_TEMP
AS
(
WITH temp_t AS
(
SELECT *,RANK() OVER(PARTITION BY MATNR,MEINH ORDER BY HPEAN DESC) AS EANTP_RANK
FROM  `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MEAN_CV`
WHERE EANTP IN ('UC','UX') AND MEINH IN ('CS','EA','KAR')
)
SELECT *
FROM temp_t
WHERE EANTP_RANK = 1
)
;

CREATE OR REPLACE TEMPORARY TABLE EANTP_IC_TEMP
AS
(
WITH temp_t AS
(
SELECT *,RANK() OVER(PARTITION BY MATNR,MEINH ORDER BY HPEAN DESC) AS EANTP_RANK
FROM  `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MEAN_CV`
WHERE EANTP IN ('IC') AND MEINH IN('CS','EA','KAR')
)
SELECT *
FROM temp_t
WHERE EANTP_RANK = 1
)
;

CREATE OR REPLACE TEMPORARY TABLE EANTP_HE_TEMP
AS
(
WITH temp_t AS
(
SELECT *,RANK() OVER(PARTITION BY MATNR,MEINH ORDER BY HPEAN DESC) AS EANTP_RANK
FROM  `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MEAN_CV`
WHERE EANTP IN ('HE') AND MEINH IN('CS','EA','KAR')
)
SELECT *
FROM temp_t
WHERE EANTP_RANK = 1
)
;

CREATE OR REPLACE TEMPORARY TABLE MEAN_N_TEMP
AS
(
WITH temp_t AS
(
SELECT *,RANK() OVER(PARTITION BY MATNR,MEINH ORDER BY EANTP,HPEAN DESC) AS EANTP_RANK
FROM  `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MEAN_CV`
WHERE EANTP IN ('N1', 'N2', 'N3', 'N4', 'N5')
)
SELECT *
FROM temp_t
WHERE EANTP_RANK = 1
)
;

--Create a temporary table to get a) PRIMARY KEY, B) ACTION ID TO IDENTIFY INSERTS AND UPDATES, C) ROW ADD TIMESTAMPS WHICH IS EXPECTED TO BE PRESERVED FOR UPDATED COLUMNS, From the source VI2 views. A join with Target D1  table is needed to preserve the record ADD information

CREATE OR REPLACE TEMPORARY TABLE MAT_LATEST_RECORDS_TEMP AS
SELECT
CONCAT(SRC.MATNR_MARA,SRC.START_DTE) AS COMPOSITE_KEY, SRC.D0_ACTION_ID, TGT.ROW_ADD_STP, TGT.ROW_ADD_USER_ID
FROM
PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_CUSTOM__MATERIAL_SCD_CV  SRC
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MATERIAL_CV` TGT
ON CONCAT(SRC.MATNR_MARA,SRC.START_DTE) = TGT.COMPOSITE_KEY
WHERE D0_CURR_VRSN_FLG = 'Y'
AND D0_START_STP > v_proc_timestamp;

--delete all records from the target which has been updated in the latest batch

DELETE FROM `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MATERIAL_CV` WHERE COMPOSITE_KEY IN (SELECT COMPOSITE_KEY FROM MAT_LATEST_RECORDS_TEMP WHERE D0_ACTION_ID = 'UPDATE') ;

--STEP 6: Insert all records as part of current Load

INSERT INTO `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MATERIAL_CV`
SELECT
	MAT.MATNR_MARA,
	CAST(MAT.START_DTE AS DATE) AS START_DTE,
	CAST(MAT.END_DTE AS DATE) AS END_DTE,
	MAT.CURR_VRSN_FLG,
	MAT.MAKTX_MAKT,
	IF(MAT.CALC_ERSDA_MARA IS NULL, CAST('1900-01-01' AS DATE), MAT.CALC_ERSDA_MARA) AS CREATE_ON_DTE,
	MAT.ERNAM_MARA,
	IF(SAFE_CAST(MAT.LAEDA_MARA AS DATE FORMAT 'YYYYMMDD') IS NULL, CAST('1900-01-01' AS DATE), CAST(MAT.LAEDA_MARA AS DATE FORMAT 'YYYYMMDD')) AS LAST_CHG_DATE,
	MAT.AENAM_MARA,
	IF(MAT.LVORM_MARA ='X', 'Y','N') AS LVORM_MARA,  --Calculated Deletion Indicator Flag
	MAT.MTART_MARA,
	IF(MTY.MTBEZ_T134T IS NULL, 'NOT_VALID', MTY.MTBEZ_T134T) AS MTBEZ_T134T_MATERIAL_TYPE,
	MAT.MBRSH_MARA,
	IF(IND.MBBEZ_T137T IS NULL, 'NOT_VALID', IND.MBBEZ_T137T) AS MBBEZ_T137T_INDUSTRY_SECTOR,
	MAT.MATKL_MARA,
	IF(MTG.WGBEZ_T023T IS NULL, 'NOT_VALID', MTG.WGBEZ_T023T) AS WGBEZ_T023T_MATERIAL_GROUP,
	MAT.MEINS_MARA,
	IF(UOMB.MSEHL_T006A IS NULL, 'NOT_VALID', UOMB.MSEHL_T006A) AS BASE_MSEHL_T006A_UNIT_OF_MEASURE,
	MAT.BSTME_MARA,
	IF(UOMP.MSEHL_T006A IS NULL, 'NOT_VALID', UOMP.MSEHL_T006A) AS PURCH_ORDER_MSEHL_T006A_UNIT_OF_MEASURE,
	MAT.GROES_MARA,
	MAT.BRGEW_MARA,
	MAT.NTGEW_MARA,
	MAT.GEWEI_MARA,
	IF(UOMW.MSEHL_T006A IS NULL, 'NOT_VALID', UOMW.MSEHL_T006A) AS WEIGHT_MSEHL_T006A_UNIT_OF_MEASURE,
	MAT.VOLUM_MARA,
	MAT.VOLEH_MARA,
	IF(UOMV.MSEHL_T006A IS NULL, 'NOT_VALID', UOMV.MSEHL_T006A) AS VOLUME_MSEHL_T006A_UNIT_OF_MEASURE,
	MAT.RAUBE_MARA,
	IF(SCN.RBTXT_T142T IS NULL, 'NOT_VALID', SCN.RBTXT_T142T) AS RBTXT_T142T_STORAGE_CONDITION,
	MAT.TEMPB_MARA,
	IF(TCD.TBTXT_T143T IS NULL, 'NOT_VALID', TCD.TBTXT_T143T) AS TBTXT_T143T_TEMPERATURE_CONDITION,
	IF(MAT.TEMPB_MARA IN ('01', '02', '03', '04', '05', '06', '07', '08', '09'), 'Y','N') AS CALC_REFRIG_FLG,
	MAT.DISST_MARA,
	MAT.TRAGR_MARA,
	IF(TGD.VTEXT_TTGRT IS NULL, 'NOT_VALID', TGD.VTEXT_TTGRT) AS VTEXT_TTGRT_TRANSPORTATION_GROUP,
	MAT.SPART_MARA,
	MAT.EAN11_MEAN_1  AS CALC_NDC_ID,
	IFNULL(MEAN1.EANTP, 'NOT_AVAILABLE') AS CALC_NDC_CTGRY_ID,
	IFNULL(MEAN3.EAN11, 'NOT_AVAILABLE') AS CALC_EACH_UPC_ID,
	IFNULL(MEAN3.EANTP, 'NOT_AVAILABLE') AS CALC_EACH_UPC_CTGRY_ID,
	IFNULL(MEAN5.EAN11, 'NOT_AVAILABLE') AS CALC_CSE_UPC_ID,
	IFNULL(MEAN5.EANTP, 'NOT_AVAILABLE') AS CALC_CSE_UPC_CTGRY_ID,
	IFNULL(MEAN7.EAN11, 'NOT_AVAILABLE') AS CALC_CTN_UPC_ID,
	IFNULL(MEAN7.EANTP, 'NOT_AVAILABLE') AS CALC_CTN_UPC_CTGRY_ID,
	IFNULL(MEAN9.EAN11, 'NOT_AVAILABLE') AS CALC_EACH_EAN_ID,
	IFNULL(MEAN10.EAN11, 'NOT_AVAILABLE') AS CALC_CSE_EAN_ID,
	IFNULL(MEAN11.EAN11, 'NOT_AVAILABLE') AS CALC_CTN_EAN_ID,
	IFNULL(MEAN12.EAN11, 'NOT_AVAILABLE') AS CALC_EACH_GTIN_ID,
	IFNULL(MEAN13.EAN11, 'NOT_AVAILABLE') AS CALC_CSE_GTIN_ID,
	IFNULL(MEAN14.EAN11, 'NOT_AVAILABLE') AS CALC_CTN_GTIN_ID,
	MAT.LAENG_MARA,
	MAT.BREIT_MARA,
	MAT.HOEHE_MARA,
	MAT.MEABM_MARA,
	IF(UOMD.MSEHL_T006A IS NULL, 'NOT_VALID', UOMD.MSEHL_T006A) AS DIM_MSEHL_T006A_UNIT_OF_MEASURE,
	MAT.PRDHA_MARA,
	IF(PRH.VTEXT_T179T IS NULL, 'NOT_VALID', PRH.VTEXT_T179T) AS VTEXT_T179T_PRODUCT_HIERARCHY,
	MAT.VABME_MARA,
	IF(VPOU.VRBL_PURCH_ORDER_UNIT_ACT_DESC_TXT IS NULL, 'NOT_VALID', VPOU.VRBL_PURCH_ORDER_UNIT_ACT_DESC_TXT) AS VRBL_PURCH_ORDER_UNIT_ACT_DESC_TXT,
	MAT.VHART_MARA,
	IF(PMT.VTEXT_TVTYT IS NULL, 'NOT_VALID', PMT.VTEXT_TVTYT) AS VTEXT_TVTYT_PACKAGING_MATERIAL_TYPE,
	MAT.MAGRV_MARA,
	IF(MGPM.BEZEI_TVEGRT IS NULL, 'NOT_VALID', MGPM.BEZEI_TVEGRT) AS BEZEI_TVEGRT_MTRL_GRP_PACKAGING_MATERIALS,
	MAT.EXTWG_MARA,
	MAT.MSTAE_MARA,
	IF(CPMS.MTSTB_T141T IS NULL, 'NOT_VALID', CPMS.MTSTB_T141T) AS MTSTB_T141T_CROSS_PLANT_MATERIAL_STATUS,
	MAT.MSTAV_MARA,
	IF(CDCM.VMSTB_TVMST IS NULL, 'NOT_VALID', CDCM.VMSTB_TVMST) AS VMSTB_TVMST_CROSS_DISTRIB_CHAIN_MTRL_STATUS,
	SAFE_CAST(MAT.MSTDE_MARA  AS DATE FORMAT 'YYYYMMDD') AS MSTDE_MARA,
	SAFE_CAST(MAT.MSTDV_MARA  AS DATE FORMAT 'YYYYMMDD') AS MSTDV_MARA,
	SAFE_CAST(MAT.MHDRZ_MARA AS INT64) AS MHDRZ_MARA,
	MAT.KZUMW_MARA,
	MAT.KOSCH_MARA,
	IF(PAL.VTEXT_T190ST IS NULL, 'NOT_VALID', PAL.VTEXT_T190ST) AS VTEXT_T190ST_PRODUCT_ALLOCATION,
	MAT.MFRPN_MARA,
	MAT.MFRNR_MARA,
	MAT.PROFL_MARA,
	IF(DGI.PROFLD_TDG42 IS NULL, 'NOT_VALID', DGI.PROFLD_TDG42) AS PROFLD_TDG42_DANGEROUS_GOODS_INDICATOR,
	MAT.MTPOS_MARA,
	IF(ICG.BEZEI_TPTMT IS NULL, 'NOT_VALID',ICG.BEZEI_TPTMT) AS BEZEI_TPTMT_ITEM_ITEM_CATEGORY_GROUP,
	MAT.SLED_BBD_MARA,
	IF(EXDI.EXP_DTE_IND_DESC_TXT IS NULL, 'NOT_VALID',EXDI.EXP_DTE_IND_DESC_TXT) AS EXP_DTE_IND_DESC_TXT,
	MAT.CALC_GENERIC_OTC_FLAG,
	IF(MAT.ALNUM_MAEX_RX_IND = 'RX', 'Y', 'N') AS CALC_RX_FLG,
	MAT.ALNUM_MAEX AS CALC_DEA_SCHED_ID,
	MAT.BEZEI_T606V AS BEZEI_T606V_Legal_Control,
	MAT.YYBASE_MARA,
	IF(DBC.YYDESC_YTMM_DEA_TEXT IS NULL, 'NOT_VALID',DBC.YYDESC_YTMM_DEA_TEXT) AS YYDESC_YTMM_DEA_TEXT_DEA_BASE_CODE,
	MAT.YYSUBB_MARA,
	IF(DSBC.YYDESC_YTMM_SUBBASETEXT IS NULL, 'NOT_VALID',DSBC.YYDESC_YTMM_SUBBASETEXT) AS YYDESC_YTMM_SUBBASETEXT_DEA_SUB_BASE_CODE,
	MAT.YYLDESC_MARA,
	MAT.YYAHFS_MARA,
	IF(AHFS.YYDESC_YTMM_AHFS_TEXT IS NULL, 'NOT_VALID',AHFS.YYDESC_YTMM_AHFS_TEXT) AS YYDESC_YTMM_AHFS_TEXT_AHFS_CODE,
	MAT.YYLSTO_MARA,
	IF(LC.YYDESC_YTMM_LIST1_TEXT IS NULL, 'NOT_VALID',LC.YYDESC_YTMM_LIST1_TEXT) AS YYDESC_YTMM_LIST1_TEXT_LIST_1_CHEMICAL,
	MAT.YYFORM_MARA,
	IF(FM.YYDESC_YTMM_FORM_TEXT IS NULL, 'NOT_VALID',FM.YYDESC_YTMM_FORM_TEXT) AS YYDESC_YTMM_FORM_TEXT_FORM,
	MAT.YYCGCN_MARA,
	MAT.YYGENN_MARA,
	MAT.YYSTRN_MARA,
	MAT.YYPCKG_MARA,
	IF(PIR.YYDESC_YTMM_PACK_TEXT IS NULL, 'NOT_VALID',PIR.YYDESC_YTMM_PACK_TEXT) AS YYDESC_YTMM_PACK_TEXT_PACKAGING_INDICATOR,
	IF(MAT.YYPCKG_MARA = 'UD', 'Y', 'N') AS UNIT_DOSE_FLG,
	MAT.YYSUPNR_MARA,
	SUPP.SUPPLIER_NAM,
	MAT.YYHAZSC_MARA,
	IF(HZM.YYDESC_YTMM_HAZMAT_TEXT IS NULL, 'NOT_VALID',HZM.YYDESC_YTMM_HAZMAT_TEXT) AS YYDESC_YTMM_HAZMAT_TEXT_HAZMAT_STORAGE,
	MAT.YYSPHD_MARA,
	IF(SH.YYDESC_YTMM_SPECL_TEXT IS NULL, 'NOT_VALID',SH.YYDESC_YTMM_SPECL_TEXT) AS YYDESC_YTMM_SPECL_TEXT_SPECIAL_HANDLING,
	MAT.YYINJECT_MARA,
	MAT.YYFINE_MARA,
	IF(HFEC.YYDESC_YTMM_FINE_TEXT IS NULL, 'NOT_VALID',HFEC.YYDESC_YTMM_FINE_TEXT) AS YYDESC_YTMM_FINE_TEXT_HAMACHER_FINE_CLASS,
	MAT.YYFINER_MARA,
	IF(HFRC.YYDESC_YTMM_FINER_TEXT IS NULL, 'NOT_VALID',HFRC.YYDESC_YTMM_FINER_TEXT) AS YYDESC_YTMM_FINER_TEXT_HAMACHER_FINER_CLASS,
	MAT.YYFINEST_MARA,
	IF(HFTC.YYDESC_YTMM_FINEST_TEXT IS NULL, 'NOT_VALID',HFTC.YYDESC_YTMM_FINEST_TEXT) AS YYDESC_YTMM_FINEST_TEXT_HAMACHER_FINEST_CLASS,
	MAT.YYFLASH_MARA,
	MAT.YYTNAM_MARA,
	MAT.YYCASN1_MARA,
	MAT.YYCASP1_MARA,
	MAT.YYCASN2_MARA,
	MAT.YYCASP2_MARA,
	MAT.YYCASN3_MARA,
	MAT.YYCASP3_MARA,
	MAT.YYCASN4_MARA,
	MAT.YYCASP4_MARA,
	MAT.YYCASN5_MARA,
	MAT.YYCASP5_MARA,
	MAT.YYCASN6_MARA,
	MAT.YYCASP6_MARA,
	MAT.YYDOTSP_MARA,
	MAT.YYCMPTN_MARA,
	SAFE_CAST(MAT.YYHAZKEY_MARA AS INT64) AS YYHAZKEY_MARA ,
	MAT.YYGCNSQN_MARA,
	MAT.YYBOXSTYLE_MARA,
	SAFE_CAST(MAT.YYCHG3P_MARA AS INT64) AS YYCHG3P_MARA,
	MAT.YYLOGGR_MARA,
	MAT.YYPACREF_MARA,
	IF(PRE.YYDESC_YTMM_PACREF_TEXT IS NULL, 'NOT_VALID',PRE.YYDESC_YTMM_PACREF_TEXT) AS YYDESC_YTMM_PACREF_TEXT_PACKAGE_REFERENCE,
	MAT.YYFORMFAM_MARA,
	SAFE_CAST(MAT.YYNDCFDB_MARA AS INT64) AS YYNDCFDB_MARA,
	MAT.YYJCODEFDB_MARA,
	MAT.YYJCODECAH_MARA,
	MAT.YYHCPCFDB_MARA,
	MAT.YYHCPCCAH_MARA,
	MAT.YYHCPCDESC_MARA,
	MAT.YYHCPCDOSVAL_MARA,
	MAT.YYHCPCDOSUOM_MARA,
	MAT.YYPAYLIMFDB_MARA,
	MAT.YYSTNGSP_MARA,
	MAT.YYSTNGUOMSP_MARA,
	MAT.YYVOLSP_MARA,
	MAT.YYVOLUOMSP_MARA,
	MAT.YYCONCNUM_MARA,
	MAT.YYCONCNUMUOM_MARA,
	MAT.YYCONCDEN_MARA,
	MAT.YYCONCDENUOM_MARA,
	MAT.YYBILLVLSP_MARA,
	MAT.YYBILLPKSP_MARA,
	MAT.YYTAIDISP_MARA,
	MAT.YYTAIPRCH_MARA,
	MAT.YYTAIUOM_MARA,
	SAFE_CAST(MAT.YYSTKRQTY_MARA AS INT64) AS YYSTKRQTY_MARA,
	MAT.YYTRADNAME_MARA,
	SAFE_CAST(MAT.YYCONKEY_MARA AS INT64) AS YYCONKEY_MARA,
	MAT.YYSRCSKEY_MARA,
	MAT.YYGCNSQNC_MARA,
	MAT.YYAHFSC_MARA,
	IF(AHFSC.YYDESC_YTMM_AHFS_TEXT IS NULL, 'NOT_VALID',AHFSC.YYDESC_YTMM_AHFS_TEXT) AS CARD_AHFS_CDE_DESC_TXT,
	MAT.YYOBRAT_MARA,
	IF(OBC.YYDESC_YTMM_OBRAT_TEXT IS NULL, 'NOT_VALID',OBC.YYDESC_YTMM_OBRAT_TEXT) AS FDB_YYDESC_YTMM_OBRAT_TEXT_ORANGE_BOOK_CODE,
	MAT.YYPKGKEY_MARA,
	MAT.YYPKGKEYC_MARA,
	MAT.YYREMSP_MARA,
	IF(RP.YYDESC_YTMM_REMS_PROG_T IS NULL, 'NOT_VALID',RP.YYDESC_YTMM_REMS_PROG_T) AS YYDESC_YTMM_REMS_PROG_T_REMS_PROGRAM,
	MAT.YYPKSZE_MARA,
	SAFE_CAST(SAFE_CAST(MAT.CALC_PACKQTYUOMDENOMINATOR AS INT64 ) /SAFE_CAST(MAT.CALC_PACKQTYUOMNUMERATOR AS INT64) AS INT64) AS CALC_PACK_QTY,
	SAFE_CAST((MAT.YYPKSZE_MARA *(MARMC.UMREN/MARMC.UMREZ) )AS NUMERIC) AS CALC_ACCUNET_QTY,
	--SAFE_CAST('' AS NUMERIC) as CALC_ACCUNET_QTY,
	MARC.YYMLTSRCF,
	MARC.YYAWPM,
	MARC.YYUOMM,
	MARC.YYPRIU,
	IF(PU.YYDESC_YTMM_PRIU_T IS NULL, 'NOT_VALID',PU.YYDESC_YTMM_PRIU_T) AS YYDESC_YTMM_PRIU_T_PRICING_USAGE,
	MARC.YYEDESC,
	MARC.YYOBRATC,
	IF(OBCC.YYDESC_YTMM_OBRAT_TEXT IS NULL, 'NOT_VALID',OBCC.YYDESC_YTMM_OBRAT_TEXT) AS CARD_YYDESC_YTMM_OBRAT_TEXT_ORANGE_BOOK_CODE,
	SAFE_CAST(MARC.YYREQG AS INT64) AS YYREQG,
	If(MARC.YYMANOVR = 'X', 'Y','N') AS YYMANOVR_MARA,
	MARC.YYOVRREA AS YYOVRREA_MARA,
	--'' as YYMANOVR_MARA,--MAT.YYMANOVR_MARA
	--'' as YYOVRREA_MARA,--MAT.YYOVRREA_MARA
	MAT.ZZTAXD_MARA,
	IF(STX.DESCRIPTION_ZMT_PTS_TAX_DRVR IS NULL, 'NOT_VALID',STX.DESCRIPTION_ZMT_PTS_TAX_DRVR) AS DESCRIPTION_ZMT_PTS_TAX_DRVR_SALES_TAX_DRIVER,
	MAT.ZZCALPROP65_MARA,
	If(MARC.YYOPIOID = 'X', 'Y','N') AS YYOPIOID_MARA,
	MARC.YYDEANAME,
	MARC.YYNIOSH,
	MAT.CALC_CARDINALKEY AS CALC_CARD_SBST_KEY_ID,
	SAFE_CAST(SAFE_CAST(MAT.CALC_CASEUOMDENOMINATOR AS INT64 ) /SAFE_CAST(MAT.CALC_CASEUOMNUMERATOR AS INT64) AS INT64) AS CALC_CSE_QTY,
	SAFE_CAST(SAFE_CAST(MAT.CALC_DOSEUOMDENOMINATOR AS INT64 ) /SAFE_CAST(MAT.CALC_DOSEUOMNUMERATOR AS INT64) AS INT64)AS CALC_DOSE_QTY,
	SAFE_CAST('' AS INT64) AS CALC_CTN_QTY, 		--CALC_CTN_QTY,
	SAFE_CAST('' AS INT64) AS CALC_EACH_QTY,		--CALC_EACH_QTY ,
	MARM.MEINH AS CALC_RMBMT_UOM_CDE  ,
	'' AS CALC_RMBMT_UOM_TXT,		--CALC_RMBMT_UOM_TXT,
	SAFE_CAST('' AS INT64) AS CALC_RMBMT_UOM_QTY,		--CALC_RMBMT_UOM_QTY,
	MAT.CALC_SHAPE,
	MAT.CALC_COLOR,
	'' AS CALC_FLAVOR,				--MAT.CALC_FLAVOR
	MAT.DRUG_GROUP_ID_MEDISPAN_PROD,
	MAT.DRUG_GROUP_DESC_MEDISPAN,
	MAT.DRUG_CLASS_ID_MEDISPAN_PROD,
	MAT.DRUG_CLASS_DESC_MEDISPAN,
	MAT.DRUG_SUBCLS_ID_MEDISPAN_PROD,
	MAT.DRUG_SUBCLASS_DESC_MEDISPAN,
	MAT.GEN_PROD_ID_ARCH_MEDISPAN,
	MAT.TEE_ID_ARCH_MEDISPAN,
	MARC.YYBUNIT AS YYBUNIT_MARA,
	IF(UOMBI.MSEHL_T006A IS NULL, 'NOT_VALID', UOMBI.MSEHL_T006A) AS BILL_UNIT_MSEHL_T006A_UNIT_OF_MEASURE,
	AUSP1.ATWRT AS CALC_DSCSA_EXEMPT_ID,
	IF (AUSP2.ATWRT = 'YES','Y','N') AS CALC_FOOD_FLG,
	IF(AUSP3.ATWRT = 'YES','Y','N') AS CALC_EXP_DTE_FLG,
	AUSP4.ATWRT AS CALC_VETERINARY_ID,
	AUSP5.ATWRT AS CALC_CONTAINS_BPA_ID,
	AUSP6.ATWRT AS CALC_CONTAINS_DEHP_ID,
	AUSP7.ATWRT AS CALC_EPA_REGISTERED_ID,
	AUSP8.ATWRT  AS CALC_ETO_STERILIZED_ID,
	IF(AUSP9.ATWRT = 'YES','Y','N') AS CALC_DIR_SRC_FLG,
	IF(AUSP10.ATWRT = 'YES','Y','N') AS CALC_SERIAL_FLG,
	IF(AUSP11.ATWRT = 'YES','Y','N') AS CALC_MED_FOOD_FLG,
	AUSP12.ATWRT AS CALC_KIT_WITH_DRUG_FLG,
	AUSP13.ATWRT AS CALC_CA_PRPS_65_ID,
	AUSP14.ATWRT  AS CALC_PLASMA_ID,
	AUSP15.ATWRT AS CALC_TRADE_PRTNR_TYPE_ID,
	AUSP16.ATWRT AS CALC_NY_LAW_CDE_ID,
	IF(AUSP17.ATWRT = 'YES','Y','N') AS CALC_ADDL_MFG_INFO_FLG,
	AUSP18.ATWRT AS CALC_BONUS_PACK_MTRL_NUM,
	IF(AUSP19.ATWRT = 'YES','Y','N') AS CALC_PURCH_BLCK_REVIEW_NEED_FLG,
	IF(AUSP20.ATWRT = 'YES','Y','N') AS CALC_STICKERS_ONLY_FLG,
	AUSP21.ATWRT AS CALC_BRAND_GEN_EXCP_ID,
	IF(AUSP22.ATWRT = 'YES','Y','N') AS CALC_DEMAND_FORECASTING_ALRG_FLG,
	IF(AUSP23.ATWRT = 'YES','Y','N') AS CALC_DEMAND_FORECASTING_COUGH_COLD_FLG,
	AUSP24.ATWRT AS CALC_FLU_ID,
	AUSP25.ATWRT AS CALC_DOCUMENTS_MSNG_ID,
	AUSP26.ATWRT AS CALC_DPLCT_MTRL_REASON_ID,
	IF(AUSP27.ATWRT = 'YES','Y','N') AS CALC_MEDSURG_FLG,
	AUSP28.ATWRT AS CALC_COVID_ID,
	IF(AUSP29.ATWRT = 'YES','Y','N') AS CALC_KINRAY_ITEM_FLG,
	AUSP30.ATWRT AS CALC_PUERTO_RICO_ITEM_ID,
	AUSP31.ATWRT AS CALC_BIOLOGIC_BLA_TYPE_ID,
	IF(AUSP32.ATWRT = 'YES','Y','N') AS CALC_IB_SPECIAL_PROCESS_FLG,
	IF(AUSP33.ATWRT = 'YES','Y','N') AS CALC_CNSMR_HLTH_PLNGRM_FLG,
	IF(AUSP34.ATWRT = 'YES','Y','N') AS CALC_VACCINE_PORTAL_ID,
	TEMPD.COMPOSITE_KEY,
	CASE WHEN TEMPD.D0_ACTION_ID = 'UPDATE' THEN TEMPD.ROW_ADD_STP  -- Preserve the ROW_ADD_STP for updated records
			 ELSE v_start_stp END AS ROW_ADD_STP,
	CASE WHEN TEMPD.D0_ACTION_ID = 'UPDATE' THEN TEMPD.ROW_ADD_USER_ID -- Preserve the ROW_ADD_USER_ID for updated records
			 ELSE v_stored_proc_name END AS ROW_ADD_USER_ID,
	v_start_stp AS ROW_UPDATE_STP,
	v_stored_proc_name AS ROW_UPDATE_USER_ID

FROM `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_CUSTOM__MATERIAL_SCD_CV` MAT
INNER JOIN MAT_LATEST_RECORDS_TEMP  TEMPD   -- Join on the Temp table using the cmposite key to get the records
ON CONCAT(MAT.MATNR_MARA,MAT.START_DTE) = TEMPD.COMPOSITE_KEY
INNER JOIN MATERIAL_MARA_TEMP MARC
ON MAT.MATNR_MARA = MARC.MATNR
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MATERIAL_TYPE_CV` MTY ON MTY.MTART_T134T = MAT.MTART_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.INDUSTRY_SECTOR_CV` IND ON IND.MBRSH_T137T = MAT.MBRSH_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MATERIAL_GROUP_CV` MTG ON MTG.MATKL_T023T = MAT.MATKL_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMB ON UOMB.MSEHI_T006A = MAT.MEINS_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMP ON UOMP.MSEHI_T006A = MAT.BSTME_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMW ON UOMW.MSEHI_T006A = MAT.GEWEI_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMV ON UOMV.MSEHI_T006A = MAT.VOLEH_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.STORAGE_CONDITION_CV` SCN ON SCN.RAUBE_T142T  = MAT.RAUBE_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.TEMPERATURE_CONDITION_CV` TCD ON TCD.TEMPB_T143T = MAT.TEMPB_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.TRANSPORTATION_GROUP_CV` TGD ON TGD.TRAGR_TTGRT = MAT.TRAGR_MARA

LEFT JOIN MEAN_N_TEMP MEAN1 ON MEAN1.MATNR = MAT.MATNR_MARA AND MEAN1.MEINH = MAT.MEINS_MARA
LEFT JOIN EANTP_UC_UX_TEMP MEAN3 ON MEAN3.MATNR = MAT.MATNR_MARA AND MEAN3.EANTP IN ('UC', 'UX') AND MEAN3.MEINH = 'EA'
LEFT JOIN EANTP_UC_UX_TEMP MEAN5 ON MEAN5.MATNR = MAT.MATNR_MARA AND MEAN5.EANTP IN ('UC', 'UX') AND MEAN5.MEINH = 'CS'
LEFT JOIN EANTP_UC_UX_TEMP MEAN7 ON MEAN7.MATNR = MAT.MATNR_MARA AND MEAN7.EANTP IN ('UC', 'UX') AND MEAN7.MEINH = 'KAR'
LEFT JOIN EANTP_HE_TEMP MEAN9 ON MEAN9.MATNR = MAT.MATNR_MARA AND MEAN9.EANTP ='HE' AND MEAN9.MEINH = 'EA'
LEFT JOIN EANTP_HE_TEMP MEAN10 ON MEAN10.MATNR = MAT.MATNR_MARA AND MEAN10.EANTP ='HE' AND MEAN10.MEINH = 'CS'
LEFT JOIN EANTP_HE_TEMP MEAN11 ON MEAN11.MATNR = MAT.MATNR_MARA AND MEAN11.EANTP ='HE' AND MEAN11.MEINH = 'KAR'
LEFT JOIN EANTP_IC_TEMP MEAN12 ON MEAN12.MATNR = MAT.MATNR_MARA AND MEAN12.EANTP ='IC' AND MEAN12.MEINH = 'EA'
LEFT JOIN EANTP_IC_TEMP MEAN13 ON MEAN13.MATNR = MAT.MATNR_MARA AND MEAN13.EANTP ='IC' AND MEAN13.MEINH = 'CS'
LEFT JOIN EANTP_IC_TEMP MEAN14 ON MEAN14.MATNR = MAT.MATNR_MARA AND MEAN14.EANTP ='IC' AND MEAN14.MEINH = 'KAR'
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMD ON UOMD.MSEHI_T006A = MAT.MEABM_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PRODUCT_HIERARCHY_CV` PRH ON PRH.PRODH_T179 = MAT.PRDHA_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.VARIABLE_PO_UNIT_ACTIVITY_CV` VPOU ON VPOU.VABME_MARA = MAT.VABME_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PACKAGING_MATERIAL_TYPE_CV` PMT ON PMT.TRATY_TVTYT = MAT.VHART_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.MTRL_GRP_PACKAGING_MATERIALS_CV` MGPM ON MGPM.MAGRV_TVEGRT  = MAT.MAGRV_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.CROSS_PLANT_MATERIAL_STATUS_CV` CPMS ON CPMS.MMSTA_T141T  = MAT.MSTAE_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.CROSS_DISTRIB_CHAIN_MTRL_STATUS_CV` CDCM ON CDCM.VMSTA_TVMST  = MAT.MSTAV_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PRODUCT_ALLOCATION_CV` PAL ON PAL.KOSCH_T190ST  = MAT.KOSCH_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.DANGEROUS_GOOD_INDICATOR_CV` DGI ON DGI.PROFL_TDG42  = MAT.PROFL_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.ITEM_CATEGORY_GROUP_CV` ICG ON ICG.MTPOS_TPTMT  = MAT.MTPOS_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.EXPIRATION_DATE_INDICATOR_CV` EXDI ON EXDI.SLED_BBD_MARA  = MAT.SLED_BBD_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.DEA_BASE_CODE_CV` DBC ON DBC.YYBASE_YTMM_DEA_TEXT  = MAT.YYBASE_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.DEA_SUB_BASE_CODE_CV` DSBC ON DSBC.YYSUBB_YTMM_SUBBASETEXT  = MAT.YYSUBB_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.AHFS_CODE_CV` AHFS ON AHFS.YYAHFS_YTMM_AHFS_TEXT  = MAT.YYAHFS_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.LIST_1_CHEMICAL_CV` LC ON LC.YYLSTO_YTMM_LIST1_TEXT  = MAT.YYLSTO_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.FORM_CV` FM ON FM.YYFORM_YTMM_FORM_TEXT  = MAT.YYFORM_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PACKAGING_INDICATOR_CV` PIR ON PIR.YYPCKG_YTMM_PACK_TEXT  = MAT.YYPCKG_MARA
LEFT JOIN SUPPLIER_TEMP SUPP ON SUPP.SUPPLIER_NUM  = MAT.YYSUPNR_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.HAZMAT_STORAGE_CV` HZM ON HZM.YYHAZSC_YTMM_HAZMAT_TEXT  = MAT.YYHAZSC_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.SPECIAL_HANDLING_CV` SH ON SH.YYSPHD_YTMM_SPECL_TEXT  = MAT.YYSPHD_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.HAMACHER_FINE_CLASS_CV` HFEC ON HFEC.YYFINE_YTMM_FINE_TEXT  = MAT.YYFINE_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.HAMACHER_FINER_CLASS_CV` HFRC ON HFRC.YYFINER_YTMM_FINER_TEXT  = MAT.YYFINER_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.HAMACHER_FINEST_CLASS_CV` HFTC ON HFTC.YYFINEST_YTMM_FINEST_TEXT  = MAT.YYFINEST_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PACKAGE_REFERENCE_CV` PRE ON PRE.YYPACREF_YTMM_PACREF_TEXT  = MAT.YYPACREF_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.AHFS_CODE_CV` AHFSC ON AHFSC.YYAHFS_YTMM_AHFS_TEXT  = MAT.YYAHFSC_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.ORANGE_BOOK_CODE_CV` OBC ON OBC.YYOBRAT_YTMM_OBRAT_TEXT = MAT.YYOBRAT_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.REMS_PROGRAM_CV` RP ON RP.YYREMSP_YTMM_REMS_PROG_T  = MAT.YYREMSP_MARA
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.PRICING_USAGE_CV` PU ON PU.YYPRIU_YTMM_PRIU_T  = MARC.YYPRIU
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.ORANGE_BOOK_CODE_CV` OBCC ON OBCC.YYOBRAT_YTMM_OBRAT_TEXT = MARC.YYOBRATC
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.SALES_TAX_DRIVER_CV` STX ON STX.ZZMTAXD_ZMT_PTS_TAX_DRVR  = MAT.ZZTAXD_MARA
LEFT JOIN `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MARM_CV` MARMC ON MAT.MATNR_MARA =MARMC.MATNR AND MARMC.MEINH = 'PQ'
LEFT JOIN `PROJECT_ID.VI2_PHM_CONFDIM_MATERIAL.PHM_ORP_PE1_PH1__MARM_CV` MARM ON MARM.MEINH = MAT.MEINS_MARA AND MARM.MATNR = MAT.MATNR_MARA AND MARM.MEINH IN ('UNI', 'ML', 'GM')
LEFT JOIN `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.UNIT_OF_MEASURE_CV` UOMBI ON UOMBI.MSEHI_T006A = MARC.YYBUNIT
LEFT JOIN AUSP_INOB_TEMP AUSP1 ON AUSP1.OBJEK = MAT.MATNR_MARA AND AUSP1.ATINN = '0000000037'
LEFT JOIN AUSP_INOB_TEMP AUSP2 ON AUSP2.OBJEK = MAT.MATNR_MARA AND AUSP2.ATINN = '0000000038'
LEFT JOIN AUSP_INOB_TEMP AUSP3 ON AUSP3.OBJEK = MAT.MATNR_MARA AND AUSP3.ATINN = '0000000039'
LEFT JOIN AUSP_INOB_TEMP AUSP4 ON AUSP4.OBJEK = MAT.MATNR_MARA AND AUSP4.ATINN = '0000000040'
LEFT JOIN AUSP_INOB_TEMP AUSP5 ON AUSP5.OBJEK = MAT.MATNR_MARA AND AUSP5.ATINN = '0000000041'
LEFT JOIN AUSP_INOB_TEMP AUSP6 ON AUSP6.OBJEK = MAT.MATNR_MARA AND AUSP6.ATINN = '0000000042'
LEFT JOIN AUSP_INOB_TEMP AUSP7 ON AUSP7.OBJEK = MAT.MATNR_MARA AND AUSP7.ATINN = '0000000043'
LEFT JOIN AUSP_INOB_TEMP AUSP8 ON AUSP8.OBJEK = MAT.MATNR_MARA AND AUSP8.ATINN = '0000000044'
LEFT JOIN AUSP_INOB_TEMP AUSP9 ON AUSP9.OBJEK = MAT.MATNR_MARA AND AUSP9.ATINN = '0000000045'
LEFT JOIN AUSP_INOB_TEMP AUSP10 ON AUSP10.OBJEK = MAT.MATNR_MARA AND AUSP10.ATINN = '0000000046'
LEFT JOIN AUSP_INOB_TEMP AUSP11 ON AUSP11.OBJEK = MAT.MATNR_MARA AND AUSP11.ATINN = '0000000047'
LEFT JOIN AUSP_INOB_TEMP AUSP12 ON AUSP12.OBJEK = MAT.MATNR_MARA AND AUSP12.ATINN = '0000000048'
LEFT JOIN AUSP_INOB_TEMP AUSP13 ON AUSP13.OBJEK = MAT.MATNR_MARA AND AUSP13.ATINN = '0000000049'
LEFT JOIN AUSP_INOB_TEMP AUSP14 ON AUSP14.OBJEK = MAT.MATNR_MARA AND AUSP14.ATINN = '0000000055'
LEFT JOIN AUSP_INOB_TEMP AUSP15 ON AUSP15.OBJEK = MAT.MATNR_MARA AND AUSP15.ATINN = '0000000056'
LEFT JOIN AUSP_INOB_TEMP AUSP16 ON AUSP16.OBJEK = MAT.MATNR_MARA AND AUSP16.ATINN = '0000000059'
LEFT JOIN AUSP_INOB_TEMP AUSP17 ON AUSP17.OBJEK = MAT.MATNR_MARA AND AUSP17.ATINN = '0000000064'
LEFT JOIN AUSP_INOB_TEMP AUSP18 ON AUSP18.OBJEK = MAT.MATNR_MARA AND AUSP18.ATINN = '0000000065'
LEFT JOIN AUSP_INOB_TEMP AUSP19 ON AUSP19.OBJEK = MAT.MATNR_MARA AND AUSP19.ATINN = '0000000066'
LEFT JOIN AUSP_INOB_TEMP AUSP20 ON AUSP20.OBJEK = MAT.MATNR_MARA AND AUSP20.ATINN = '0000000067'
LEFT JOIN AUSP_INOB_TEMP AUSP21 ON AUSP21.OBJEK = MAT.MATNR_MARA AND AUSP21.ATINN = '0000000068'
LEFT JOIN AUSP_INOB_TEMP AUSP22 ON AUSP22.OBJEK = MAT.MATNR_MARA AND AUSP22.ATINN = '0000000069'
LEFT JOIN AUSP_INOB_TEMP AUSP23 ON AUSP23.OBJEK = MAT.MATNR_MARA AND AUSP23.ATINN = '0000000070'
LEFT JOIN AUSP_INOB_TEMP AUSP24 ON AUSP24.OBJEK = MAT.MATNR_MARA AND AUSP24.ATINN = '0000000071'
LEFT JOIN AUSP_INOB_TEMP AUSP25 ON AUSP25.OBJEK = MAT.MATNR_MARA AND AUSP25.ATINN = '0000000071'
LEFT JOIN AUSP_INOB_TEMP AUSP26 ON AUSP26.OBJEK = MAT.MATNR_MARA AND AUSP26.ATINN = '0000000073'
LEFT JOIN AUSP_INOB_TEMP AUSP27 ON AUSP27.OBJEK = MAT.MATNR_MARA AND AUSP27.ATINN = '0000000074'
LEFT JOIN AUSP_INOB_TEMP AUSP28 ON AUSP28.OBJEK = MAT.MATNR_MARA AND AUSP28.ATINN = '0000000076'
LEFT JOIN AUSP_INOB_TEMP AUSP29 ON AUSP29.OBJEK = MAT.MATNR_MARA AND AUSP29.ATINN = '0000000079'
LEFT JOIN AUSP_INOB_TEMP AUSP30 ON AUSP30.OBJEK = MAT.MATNR_MARA AND AUSP30.ATINN = '0000000080'
LEFT JOIN AUSP_INOB_TEMP AUSP31 ON AUSP31.OBJEK = MAT.MATNR_MARA AND AUSP31.ATINN = '0000000082'
LEFT JOIN AUSP_INOB_TEMP AUSP32 ON AUSP32.OBJEK = MAT.MATNR_MARA AND AUSP32.ATINN = '0000000085'
LEFT JOIN AUSP_INOB_TEMP AUSP33 ON AUSP33.OBJEK = MAT.MATNR_MARA AND AUSP33.ATINN = '0000000088'
LEFT JOIN AUSP_INOB_TEMP AUSP34 ON AUSP34.OBJEK = MAT.MATNR_MARA AND AUSP34.ATINN = '0000000091'

 ;

-- UPDATE THE EVENT TABLE

UPDATE `PROJECT_ID.D1_PHM_CONFDIM_MATERIAL.LAST_TIMESTAMP_MATERIAL_EV` SET SP_MATERIAL_DELTA_LOAD_STP = v_last_timestamp WHERE 1=1;

/*Stored Proc execution logging for success or failure */

INSERT INTO
  `PROJECT_ID.D1_PHM_DW_LOG.LOGTBL_DIMENSION` (
  SELECT
    v_stored_proc_name,
    v_start_time,
    current_datetime(),
    'SUCCESS',
    NULL,
    @@ROW_COUNT,
    NULL,
    NULL,
    @@script.bytes_processed/1024/1024,
    @@script.bytes_billed/1024/1024,
    @@script.job_id,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL); EXCEPTION
    WHEN ERROR THEN
	INSERT INTO `D1_PHM_DW_LOG.LOGTBL_DIMENSION`
	( module_name, start_date, end_date, status, err_msg, err_st_txt, err_st_trc )
	( SELECT v_stored_proc_name, current_datetime(), current_datetime(),
	'FAILED', @@error.message, @@error.statement_text, @@error.formatted_stack_trace );
END;