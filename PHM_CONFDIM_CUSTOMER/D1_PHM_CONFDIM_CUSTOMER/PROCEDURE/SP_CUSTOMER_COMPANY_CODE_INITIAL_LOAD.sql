CREATE PROCEDURE `PROJECT_ID`.D1_PHM_CONFDIM_CUSTOMER.SP_CUSTOMER_COMPANY_CODE_INITIAL_LOAD()
BEGIN

/***********************************************************************************************************************
Author: AKSHOBHYA S ACHAR
Creation Date: 05/15/2023
Data Sources:
*************************************************************************
Change History		[DATE]			[CHANGED BY]	[JIRA#]		[CODE REVIEW BY]		[DESCRIPTION]
<#>					<MM/DD/YYYY>	<Name>			<ID>

************************************************************************************************************************/

DECLARE v_start_time DATETIME;
DECLARE v_start_stp TIMESTAMP;
DECLARE v_end_stp TIMESTAMP;
DECLARE v_end_scd_stp TIMESTAMP;
DECLARE v_stored_proc_name STRING;
DECLARE v_last_timestamp TIMESTAMP;
DECLARE v_proc_timestamp TIMESTAMP;

SET v_start_time = current_datetime();
SET v_start_stp = CURRENT_TIMESTAMP;
SET v_end_stp = (SELECT SAFE_CAST('9999-12-31 23:59:59' AS TIMESTAMP));
SET v_stored_proc_name = 'D1_PHM_CONFDIM_CUSTOMER.SP_CUSTOMER_COMPANY_CODE_INITIAL_LOAD';
SET v_last_timestamp = (SELECT MAX(D0_START_STP) FROM `PROJECT_ID.VI2_PHM_CONFDIM_CUSTOMER.PHM_ORP_PE1_PH1__KNB1_CV` );

TRUNCATE TABLE `PROJECT_ID.D1_PHM_CONFDIM_CUSTOMER.CUSTOMER_COMPANY_CODE_CV`;

INSERT INTO `PROJECT_ID.D1_PHM_CONFDIM_CUSTOMER.CUSTOMER_COMPANY_CODE_CV`
SELECT CUST.KUNNR,
CUST.BUKRS,
CUST.PERNR,
CUST.ERDAT,
CUST.ERNAM,
CUST.SPERR,
CUST.LOEVM,
CUST.ZUAWA,
CUST.BUSAB,
CUST.AKONT,
CUST.BEGRU,
CUST.KNRZE,
CUST.KNRZB,
CUST.ZAMIM,
CUST.ZAMIV,
CUST.ZAMIR,
CUST.ZAMIB,
CUST.ZAMIO,
CUST.ZWELS,
CUST.XVERR,
CUST.ZAHLS,
CUST.ZTERM,
CUST.WAKON,
CUST.VZSKZ,
CUST.ZINDT,
CUST.ZINRT,
CUST.EIKTO,
CUST.ZSABE,
CUST.KVERM,
CUST.FDGRV,
CUST.VRBKZ,
CUST.VLIBB,
CUST.VRSZL,
CUST.VRSPR,
CUST.VRSNR,
CUST.VERDT,
CUST.PERKZ,
CUST.XDEZV,
CUST.XAUSZ,
CUST.WEBTR,
CUST.REMIT,
CUST.DATLZ,
CUST.XZVER,
CUST.TOGRU,
CUST.KULTG,
CUST.HBKID,
CUST.XPORE,
CUST.BLNKZ,
CUST.ALTKN,
CUST.ZGRUP,
CUST.URLID,
CUST.MGRUP,
CUST.LOCKB,
CUST.UZAWE,
CUST.EKVBD,
CUST.SREGL,
CUST.XEDIP,
CUST.FRGRP,
CUST.VRSDG,
CUST.TLFXS,
CUST.INTAD,
CUST.XKNZB,
CUST.GUZTE,
CUST.GRICD,
CUST.GRIDT,
CUST.WBRSL,
CUST.CONFS,
CUST.UPDAT,
CUST.UPTIM,
CUST.NODEL,
CUST.TLFNS,
CUST.CESSION_KZ,
CUST.AVSND,
CUST.AD_HASH,
CUST.QLAND,
CUST.CVP_XBLCK_B,
CUST.GMVKZD,
CUST.YY_STMD_IND
,v_start_stp AS ROW_ADD_STP
,v_stored_proc_name AS ROW_ADD_USER_ID
,v_start_stp AS ROW_UPDATE_STP
,v_stored_proc_name AS ROW_UPDATE_USER_ID
FROM PROJECT_ID.VI2_PHM_CONFDIM_CUSTOMER.PHM_ORP_PE1_PH1__KNB1_CV CUST
WHERE CUST.D0_CURR_VRSN_FLG = 'Y';

-- Stored Proc execution logging for success or failure

INSERT INTO
  `PROJECT_ID.D1_PHM_DW_LOG.LOGTBL_DIMENSION` (
  SELECT
    'D1_PHM_CONFDIM_CUSTOMER.SP_CUSTOMER_COMPANY_CODE_INITIAL_LOAD',
    v_start_time,
    current_datetime(),
    'SUCCESS',
    NULL,
    @@ROW_COUNT,
    NULL,
    NULL,
    @@script.bytes_processed/1024/1024,
    @@script.bytes_billed/1024/1024,
    @@script.job_id,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL); EXCEPTION
    WHEN ERROR THEN
  INSERT INTO `PROJECT_ID.D1_PHM_DW_LOG.LOGTBL_DIMENSION`
  ( module_name, start_date, end_date, status, err_msg, err_st_txt, err_st_trc )
  ( SELECT 'D1_PHM_CONFDIM_CUSTOMER.SP_CUSTOMER_COMPANY_CODE_INITIAL_LOAD', current_datetime(), current_datetime(),
  'FAILED', @@error.message, @@error.statement_text, @@error.formatted_stack_trace );

END;